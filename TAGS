
./Setup.hs,15
main main1,2

./app/Main.hs,37
module Main Main0,1
main main4,5

./test/Spec.hs,15
main main0,1

./src/Ch06/Chapter06.hs,565
module Ch06.Chapter06 Ch06.Chapter061,2
id' id'8,9
applyTofive applyTofive12,13
cont cont28,29
runCont runCont31,32
newtype Cont Cont36,37
    unCont unCont38,39
instance Functor Functor Cont43,44
  fmap fmap44,45
instance Applicative Applicative Cont48,49
  pure pure50,51
  (<(<*>)52,53
instance Monad Monad Cont57,58
  return return58,59
  Cont Cont59,60
withVersionNumber withVersionNumber62,63
withTimeStamp withTimeStamp65,66
withOS withOS68,69
releaseString releaseString71,72
releaseStringCont releaseStringCont78,79

./src/Ch01/Chapter01.hs,928
module Ch01.Chapter01 Ch01.Chapter010,1
data TicTacToe TicTacToe13,14
data TicTacToe a = TicTacToeTicTacToe13,14
  { topLeft topLeft14,15
  , topCenter topCenter15,16
  , topRight topRight16,17
  , midLeft midLeft17,18
  , midCenter midCenter18,19
  , midRight midRight19,20
  , botLeft botLeft20,21
  , botCenter botCenter21,22
  , botRight botRight22,23
emptyBoard emptyBoard25,26
data Three Three33,34
data Three = One One33,34
data Three = One | Two Two33,34
data Three = One | Two | ThreeThree33,34
data TicTacToe2 TicTacToe236,37
data TicTacToe2 a = TicTacToe2TicTacToe236,37
  { board board37,38
emptyBoard2 emptyBoard240,41
data XO XO44,45
data XO = X X44,45
data XO = X | OO44,45
type Board Board46,47
updateBoard updateBoard48,49
funcCur funcCur62,63
funcCur' funcCur'66,67
xIIto xIIto79,80
xIIfrom xIIfrom85,86
xIIIto xIIIto91,92
xIIIfrom xIIIfrom94,95

./src/Ch04/Chapter04.hs,65
module Ch04.Chapter04 Ch04.Chapter044,5
typeName typeName8,9

./src/Ch03/Chapter03.hs,527
module Ch03.Chapter03 Ch03.Chapter030,1
newtype T1 T16,7
newtype T2 T28,9
instance Functor Functor T110,11
  fmap fmap11,12
newtype T5 T513,14
instance Functor Functor T515,16
  fmap fmap16,17
newtype Predicate' Predicate'20,21
instance Contravariant Contravariant Predicate'22,23
  contramap contramap23,24
isPredicateFive isPredicateFive25,26
data MyType MyType28,29
data MyType = MyTypeMyType28,29
  { intValue intValue29,30
  , blah blah30,31
myPredicate myPredicate33,34
test test36,37

./src/Lib.hs,42
module LibLib0,1
someFunc someFunc4,5

./src/Ch02/Chapter02.hs,141
module Ch02.Chapter02 Ch02.Chapter024,5
or' or'25,26
type family family29,30
  Or Or30,31
type family family35,36
  Not Not36,37

./src/Ch05/Chapter05.hs,695
module Ch05.Chapter05 Ch05.Chapter0510,11
data Expr Expr17,18
  LitInt LitInt18,19
  LitBool LitBool19,20
  Add Add20,21
  Not Not21,22
  If If22,23
evalExpr evalExpr24,25
data HList HList35,36
data HList (ts ts35,36
  HNil HNil36,37
  (:#) )37,38
data HList (ts ts35,36
hLength hLength40,41
hHead hHead44,45
showBool showBool47,48
type family family74,75
  AllEq AllEq75,76
type family family78,79
  All All80,81
instance All All Eq ts => Eq (HList ts)84,85
  HNil HNil85,86
  (a(a:#as)86,87
instance (A(All Eq ts, All Ord ts) => Ord (HList ts)90,91
   compare compare91,92
instance (A(All Show ts) => Show (HList ts)95,96
  show show96,97
